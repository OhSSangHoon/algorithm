import java.util.*;

public class TST<Value> {
	private Node<Value> root;
	private int N;
	
	private class Node<Value>{
		char c; //문자
		Value val; //값
		Node<Value> left, mid, right; //링크
	}
	
	//검색
	private Node<Value> get(Node<Value> x, String key, int d){
		if(x == null) {
			return null;
		}
		char c = key.charAt(d);
		//노드보다 키 값이 작다면 왼쪽으로
		if(c < x.c) {
			return get(x.left, key, d);
			//노드보다 키 값이 크다면 오른쪽으로
		}else if( c > x.c) {
			return get(x.right, key, d);
		}else if(d < key.length() -1) {
			//노드와 키 값이 같다면 아래로
			return get(x.mid, key, d+1);
		}else {
			return x;
		}
	}
	
	//삽입
	private Node<Value> put(Node<Value> x, String key, Value val, int d){
		char c = key.charAt(d);
		if(x == null) {
			x = new Node<Value>();
			x.c = c;
		}
		if(c < x.c) {
			x.left = put(x.left, key, val, d);
		}else if(c > x.c) {
			x.right = put(x.right, key, val, d);
		}else if(d < key.length() - 1) {
			x.mid = put(x.mid, key, val, d+1);
		}else {
			x.val = val;
		}
		return x;
	}
	
	
	public int size() {
		return N;
	}
	
	public boolean contains(String key) {
		return get(key) != null;
	}

	//검색
	public Value get(String key) {
		Node<Value> x = get(root, key, 0);
		if(x == null) {
			return null;
		}
		return x.val;
	}
	
	//삽입
	public void put(String key, Value val) {
		if(!contains(key))N++;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        TST<String> tst = new TST<>();
        String[] a = {"hello", "world", "tr", "trie", "tree", "algorithm"};
        
        for(String s : a) {
        	tst.put(s, s);
        }
        
        Scanner sc = new Scanner(System.in);
        
        while(true) {
        	System.out.println("Search String: ");
        	String input = sc.next();
        	
        	if("exit".equals(input)) {
        		System.out.println("프로그램 종료");
        		break;
        	}
        	
        	String result = TST.get(input);
        	if(result != null) {
        		System.out.println("찾은 값: " + result);
        	}else {
        		System.out.println(input + "는 존재하지 않습니다.");
        	}
        }
	}

}
