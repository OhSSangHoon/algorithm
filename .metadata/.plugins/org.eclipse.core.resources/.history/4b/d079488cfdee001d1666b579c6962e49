public class LSD {

    public static void sort(String[] a, int W) {
        int N = a.length;
        int R = 256;
        String[] aux = new String[N];

        for (int d = W - 1; d >= 0; d--) {
            int[] count = new int[R];
            for (int i = 0; i < N; i++)
                count[a[i].charAt(d)]++;
            for (int r = 1; r < R; r++)
                count[r] += count[r - 1];
            for (int i = N - 1; i >= 0; i--)
                aux[--count[a[i].charAt(d)]] = a[i];
            for (int i = 0; i < N; i++)
                a[i] = aux[i];
        }
    }

    public static void main(String[] args) {
        String[] a = {"170", "45", "75", "90", "2", "24", "802", "66"};

        // 배열의 최대 길이를 찾는다.
        int maxLen = 0;
        for (String s : a) {
            if (s.length() > maxLen) {
                maxLen = s.length();
            }
        }

        // 최대 길이만큼 0으로 패딩을 적용한다.
        for (int i = 0; i < a.length; i++) {
            while (a[i].length() < maxLen) {
                a[i] = a[i];
            }
        }

        sort(a, maxLen);

        // 정렬된 배열 출력
        for (String s : a) {
            System.out.print(Integer.parseInt(s));
        }
    }
}
